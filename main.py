import os
import time
import importlib.util
import asyncio
from pyrogram import Client, filters
from pyrogram.types import Message
from config import Config, Styles

def load_commands():
    commands = {}
    for filename in os.listdir(Config.CMD_FOLDER):
        if filename.endswith(".py") and filename != "__init__.py":
            module_name = filename[:-3]
            module_path = os.path.join(Config.CMD_FOLDER, filename)
            
            spec = importlib.util.spec_from_file_location(module_name, module_path)
            module = importlib.util.module_from_spec(spec)
            spec.loader.exec_module(module)
            
            if hasattr(module, 'execute'):
                commands[module_name] = module.execute
    return commands

async def start_bot():
    print(f"{Styles.HEADER}‚ïî{'‚ïê' * 50}‚ïó")
    print(f"‚ïë{'Telegram Bot Setup':^50}‚ïë")
    print(f"‚ïö{'‚ïê' * 50}‚ïù{Styles.ENDC}")
    
    api_id = input(Styles.input_prompt("–í–≤–µ–¥–∏—Ç–µ API ID: "))
    api_hash = input(Styles.input_prompt("–í–≤–µ–¥–∏—Ç–µ API HASH: "))
    
    print(f"\n{Styles.YELLOW}‚è≥ –ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...{Styles.ENDC}")
    
    app = Client(
        "my_bot",
        api_id=int(api_id),
        api_hash=api_hash,
        in_memory=True
    )
    
    commands = load_commands()
    print(Styles.success(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–æ–º–∞–Ω–¥: {len(commands)}"))
    
    @app.on_message(filters.text & (filters.private | filters.group))
    async def handle_commands(client: Client, message: Message):
        prefix = next((p for p in Config.PREFIXES if message.text.startswith(p)), None)
        if not prefix: return
        
        cmd_text = message.text[len(prefix):].strip().split()
        if not cmd_text: return
        
        cmd_name = cmd_text[0].lower()
        if cmd_name in commands:
            start_time = time.time()
            await commands[cmd_name](client, message)
            response_time = round((time.time() - start_time) * 1000, 2)
            print(Styles.success(f"–û—Ç–≤–µ—Ç–∏–ª –Ω–∞ {cmd_name} –∑–∞ {response_time}–º—Å"))
    
    return app

if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    bot = loop.run_until_complete(start_bot())
    
    try:
        print(f"\n{Styles.GREEN}‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!{Styles.ENDC}")
        print(f"{Styles.YELLOW}üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C{Styles.ENDC}\n")
        bot.run()
    except KeyboardInterrupt:
        print(f"\n{Styles.RED}üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º{Styles.ENDC}")
    except Exception as e:
        print(Styles.error(f"–û—à–∏–±–∫–∞: {str(e)}"))
